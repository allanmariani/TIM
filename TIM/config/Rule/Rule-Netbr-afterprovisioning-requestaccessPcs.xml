<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="Netbr-AfterProvisioning-RequestAccess PCS" type="AfterProvisioning">
          
    
    <Description>An IdentityIQ server-side rule that is executed after the connector's provisioning method is called. This gives the customer the ability to customize or react to anything in the ProvisioningPlan AFTER it has been sent out to the specific applications. 

This rule will be called for any application found in a plan that also has a configured 'afterProvisioningRule' configured.</Description>
          
    
    <ReferencedRules>
                    
        
        <Reference class="sailpoint.object.Rule" name="Tim-RuleLibrary"/>
                  
    
    </ReferencedRules>
          
    
    <Signature>
                    
        
        <Inputs>
                              
            
            <Argument name="log">
                                        
                
                <Description>
          The log object associated with the SailPointContext.
        </Description>
                                      
            
            </Argument>
                              
            
            <Argument name="context">
                                        
                
                <Description>
          A sailpoint.api.SailPointContext object that can be used to query the database if necessary.
        </Description>
                                      
            
            </Argument>
                              
            
            <Argument name="plan">
                                        
                
                <Description>
          The ProvisioningPlan object on its way to the Connector.
        </Description>
                                      
            
            </Argument>
                              
            
            <Argument name="application">
                                        
                
                <Description>
          The application object that references this before/after script.
        </Description>
                                      
            
            </Argument>
                              
            
            <Argument name="result">
                                        
                
                <Description>
          The ProvisioningResult object returned by the connectors provision method. This can be null and in many cases the connector will  not return a result and instead will annotate the plan's ProvisioningResult either at the plan or account level.        
        </Description>
                                      
            
            </Argument>
                            
        
        </Inputs>
                  
    
    </Signature>
          
    
    <Source><![CDATA[import sailpoint.object.*;
  import java.util.Map;
  import java.util.HashMap;
  import java.util.Date;
  import java.text.SimpleDateFormat;



    Identity identity = context.getObjectByName(Identity.class,plan.getNativeIdentity());

    String application = plan.getApplicationNames().get(0);

    log.warn("---------------[APPLICATION]------------------ " + application);

    // Verifica se o usuario já existe

    SearchResult result = findAccountByAccountName(getDirContext(), "ou=People,dc=lab,dc=netbr", identity.getName());

    if(result !=null){

      // Se  existe, atualiza o usuario adicionando outra aplicação
      log.warn("---------------[Existe usuario]------------------");

      modifyUserRole(getDirContext(), identity, application);
      addUserOUApp(getDirContext(), identity, application);


    }else{

      // Se nao existe, grava no PCS nas OUs People e Application
      log.warn("---------------[NAO Existe usuario]------------------");

      addUser(getDirContext(), identity, application);
      addUserOUApp(getDirContext(), identity, application);


    }

]]></Source>
        

</Rule>
